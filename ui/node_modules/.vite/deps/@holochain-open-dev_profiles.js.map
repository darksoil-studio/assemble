{
  "version": 3,
  "sources": ["../../../../node_modules/@holochain-open-dev/profiles/node_modules/@holochain-open-dev/utils/src/hash.ts", "../../../../node_modules/@holochain-open-dev/profiles/node_modules/@holochain-open-dev/utils/src/cell.ts", "../../../../node_modules/@holochain-open-dev/profiles/node_modules/@holochain-open-dev/utils/src/zome-client.ts", "../../../../node_modules/@holochain-open-dev/profiles/node_modules/@holochain-open-dev/utils/src/holo-hash-map.ts", "../../../../node_modules/@holochain-open-dev/profiles/node_modules/@holochain-open-dev/utils/src/map-utils.ts", "../../../../node_modules/@holochain-open-dev/profiles/node_modules/@holochain-open-dev/utils/src/entry-record.ts", "../../../../node_modules/@holochain-open-dev/profiles/src/profiles-client.ts", "../../../../node_modules/@holochain-open-dev/profiles/src/config.ts", "../../../../node_modules/@holochain-open-dev/profiles/src/profiles-store.ts"],
  "sourcesContent": [null, null, null, null, null, null, "import {\n  decodeEntry,\n  isSignalFromCellWithRole,\n  ZomeClient,\n} from \"@holochain-open-dev/utils\";\nimport {\n  AgentPubKey,\n  Record,\n  AppAgentClient,\n  AppAgentCallZomeRequest,\n  RoleName,\n} from \"@holochain/client\";\nimport { Profile, ProfilesSignal } from \"./types\";\n\nexport class ProfilesClient extends ZomeClient<ProfilesSignal> {\n  constructor(\n    public client: AppAgentClient,\n    public roleName: RoleName,\n    public zomeName = \"profiles\"\n  ) {\n    super(client, roleName, zomeName);\n  }\n\n  /**\n   * Get the profile for the given agent, if they have created it\n   *\n   * @param agentPubKey the agent to get the profile for\n   * @returns the profile of the agent, if they have created one\n   */\n  async getAgentProfile(\n    agentPubKey: AgentPubKey\n  ): Promise<Profile | undefined> {\n    const record: Record | undefined = await this.callZome(\n      \"get_agent_profile\",\n      agentPubKey\n    );\n\n    return record ? decodeEntry(record) : undefined;\n  }\n\n  /**\n   * Search profiles that start with nicknameFilter\n   *\n   * @param nicknameFilter must be of at least 3 characters\n   * @returns the agents with the nickname starting with nicknameFilter\n   */\n  async searchAgents(nicknameFilter: string): Promise<AgentPubKey[]> {\n    return this.callZome(\"search_agents\", nicknameFilter);\n  }\n\n  /**\n   * Get all the agents in the DHT that have created a profile\n   *\n   * @returns the agent public keys of all agents that have created a profile\n   */\n  async getAgentsWithProfile(): Promise<AgentPubKey[]> {\n    return this.callZome(\"get_agents_with_profile\", null);\n  }\n\n  /**\n   * Create my profile\n   *\n   * @param profile the profile to create\n   */\n  async createProfile(profile: Profile): Promise<void> {\n    return this.callZome(\"create_profile\", profile);\n  }\n\n  /**\n   * Update my profile\n   *\n   * @param profile the profile to create\n   */\n  async updateProfile(profile: Profile): Promise<void> {\n    return this.callZome(\"update_profile\", profile);\n  }\n}\n", "export interface FieldConfig {\n  name: string;\n  label: string;\n  required: boolean;\n}\n\nexport interface ProfilesConfig {\n  avatarMode: 'identicon' | 'avatar-required' | 'avatar-optional';\n  additionalFields: FieldConfig[];\n  minNicknameLength: number;\n}\n\nexport const defaultConfig: ProfilesConfig = {\n  avatarMode: 'avatar-optional',\n  additionalFields: [],\n  minNicknameLength: 3,\n};\n", "import { LazyHoloHashMap, slice } from \"@holochain-open-dev/utils\";\nimport {\n  asyncDeriveStore,\n  AsyncReadable,\n  asyncReadable,\n  lazyLoadAndPoll,\n  joinAsyncMap,\n  lazyLoad,\n} from \"@holochain-open-dev/stores\";\nimport { AgentPubKey } from \"@holochain/client\";\n\nimport { ProfilesClient } from \"./profiles-client.js\";\nimport { Profile } from \"./types.js\";\nimport { defaultConfig, ProfilesConfig } from \"./config.js\";\n\nexport class ProfilesStore {\n  config: ProfilesConfig;\n\n  constructor(\n    public client: ProfilesClient,\n    config: Partial<ProfilesConfig> = {}\n  ) {\n    this.config = { ...defaultConfig, ...config };\n  }\n\n  /**\n   * Fetches all the agents that have created a profile in the DHT\n   */\n  agentsWithProfile = lazyLoadAndPoll(\n    () => this.client.getAgentsWithProfile(),\n    1000\n  );\n\n  /**\n   * Fetches the profiles for all agents in the DHT\n   *\n   * This will get slower as the number of agents in the DHT increases\n   */\n  allProfiles = asyncDeriveStore(\n    this.agentsWithProfile,\n    (agents) =>\n      this.agentsProfiles(agents) as AsyncReadable<\n        ReadonlyMap<AgentPubKey, Profile>\n      >\n  );\n\n  // Fetches the profile for the given agent\n  profiles = new LazyHoloHashMap((agent: AgentPubKey) =>\n    asyncReadable<Profile | undefined>(async (set) => {\n      const profile = await this.client.getAgentProfile(agent);\n      set(profile);\n\n      return this.client.onSignal((signal) => {\n        if (this.client.client.myPubKey.toString() !== agent.toString()) return;\n        if (!(signal.type === \"EntryCreated\" || signal.type === \"EntryUpdated\"))\n          return;\n        set(signal.app_entry);\n      });\n    })\n  );\n\n  // Fetches your profile\n  myProfile = this.profiles.get(this.client.client.myPubKey);\n\n  // Fetches the profiles for the given agents\n  agentsProfiles(\n    agents: Array<AgentPubKey>\n  ): AsyncReadable<ReadonlyMap<AgentPubKey, Profile | undefined>> {\n    return joinAsyncMap(slice(this.profiles, agents));\n  }\n\n  searchProfiles(\n    searchFilter: string\n  ): AsyncReadable<ReadonlyMap<AgentPubKey, Profile>> {\n    return asyncDeriveStore(\n      lazyLoad(async () => this.client.searchAgents(searchFilter)),\n      (agents) =>\n        this.agentsProfiles(agents) as AsyncReadable<\n          ReadonlyMap<AgentPubKey, Profile>\n        >\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["HashType"]
}
