{
  "version": 3,
  "sources": ["../../../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.AOOF3QW5.js"],
  "sourcesContent": ["import {\n  __spreadProps,\n  __spreadValues\n} from \"./chunk.LKA3TPUC.js\";\n\n// src/internal/form.ts\nvar formCollections = /* @__PURE__ */ new WeakMap();\nvar reportValidityOverloads = /* @__PURE__ */ new WeakMap();\nvar userInteractedControls = /* @__PURE__ */ new Set();\nvar interactions = /* @__PURE__ */ new WeakMap();\nvar FormControlController = class {\n  constructor(host, options) {\n    (this.host = host).addController(this);\n    this.options = __spreadValues({\n      form: (input) => {\n        if (input.hasAttribute(\"form\") && input.getAttribute(\"form\") !== \"\") {\n          const root = input.getRootNode();\n          const formId = input.getAttribute(\"form\");\n          if (formId) {\n            return root.getElementById(formId);\n          }\n        }\n        return input.closest(\"form\");\n      },\n      name: (input) => input.name,\n      value: (input) => input.value,\n      defaultValue: (input) => input.defaultValue,\n      disabled: (input) => {\n        var _a;\n        return (_a = input.disabled) != null ? _a : false;\n      },\n      reportValidity: (input) => typeof input.reportValidity === \"function\" ? input.reportValidity() : true,\n      setValue: (input, value) => input.value = value,\n      assumeInteractionOn: [\"sl-input\"]\n    }, options);\n    this.handleFormData = this.handleFormData.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleFormReset = this.handleFormReset.bind(this);\n    this.reportFormValidity = this.reportFormValidity.bind(this);\n    this.handleInteraction = this.handleInteraction.bind(this);\n  }\n  hostConnected() {\n    const form = this.options.form(this.host);\n    if (form) {\n      this.attachForm(form);\n    }\n    interactions.set(this.host, []);\n    this.options.assumeInteractionOn.forEach((event) => {\n      this.host.addEventListener(event, this.handleInteraction);\n    });\n  }\n  hostDisconnected() {\n    this.detachForm();\n    interactions.delete(this.host);\n    this.options.assumeInteractionOn.forEach((event) => {\n      this.host.removeEventListener(event, this.handleInteraction);\n    });\n  }\n  hostUpdated() {\n    const form = this.options.form(this.host);\n    if (!form) {\n      this.detachForm();\n    }\n    if (form && this.form !== form) {\n      this.detachForm();\n      this.attachForm(form);\n    }\n    if (this.host.hasUpdated) {\n      this.setValidity(this.host.validity.valid);\n    }\n  }\n  attachForm(form) {\n    if (form) {\n      this.form = form;\n      if (formCollections.has(this.form)) {\n        formCollections.get(this.form).add(this.host);\n      } else {\n        formCollections.set(this.form, /* @__PURE__ */ new Set([this.host]));\n      }\n      this.form.addEventListener(\"formdata\", this.handleFormData);\n      this.form.addEventListener(\"submit\", this.handleFormSubmit);\n      this.form.addEventListener(\"reset\", this.handleFormReset);\n      if (!reportValidityOverloads.has(this.form)) {\n        reportValidityOverloads.set(this.form, this.form.reportValidity);\n        this.form.reportValidity = () => this.reportFormValidity();\n      }\n    } else {\n      this.form = void 0;\n    }\n  }\n  detachForm() {\n    var _a;\n    if (this.form) {\n      (_a = formCollections.get(this.form)) == null ? void 0 : _a.delete(this.host);\n      this.form.removeEventListener(\"formdata\", this.handleFormData);\n      this.form.removeEventListener(\"submit\", this.handleFormSubmit);\n      this.form.removeEventListener(\"reset\", this.handleFormReset);\n      if (reportValidityOverloads.has(this.form)) {\n        this.form.reportValidity = reportValidityOverloads.get(this.form);\n        reportValidityOverloads.delete(this.form);\n      }\n    }\n    this.form = void 0;\n  }\n  handleFormData(event) {\n    const disabled = this.options.disabled(this.host);\n    const name = this.options.name(this.host);\n    const value = this.options.value(this.host);\n    const isButton = this.host.tagName.toLowerCase() === \"sl-button\";\n    if (!disabled && !isButton && typeof name === \"string\" && name.length > 0 && typeof value !== \"undefined\") {\n      if (Array.isArray(value)) {\n        value.forEach((val) => {\n          event.formData.append(name, val.toString());\n        });\n      } else {\n        event.formData.append(name, value.toString());\n      }\n    }\n  }\n  handleFormSubmit(event) {\n    var _a;\n    const disabled = this.options.disabled(this.host);\n    const reportValidity = this.options.reportValidity;\n    if (this.form && !this.form.noValidate) {\n      (_a = formCollections.get(this.form)) == null ? void 0 : _a.forEach((control) => {\n        this.setUserInteracted(control, true);\n      });\n    }\n    if (this.form && !this.form.noValidate && !disabled && !reportValidity(this.host)) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n  handleFormReset() {\n    this.options.setValue(this.host, this.options.defaultValue(this.host));\n    this.setUserInteracted(this.host, false);\n    interactions.set(this.host, []);\n  }\n  handleInteraction(event) {\n    const emittedEvents = interactions.get(this.host);\n    if (!emittedEvents.includes(event.type)) {\n      emittedEvents.push(event.type);\n    }\n    if (emittedEvents.length === this.options.assumeInteractionOn.length) {\n      this.setUserInteracted(this.host, true);\n    }\n  }\n  reportFormValidity() {\n    if (this.form && !this.form.noValidate) {\n      const elements = this.form.querySelectorAll(\"*\");\n      for (const element of elements) {\n        if (typeof element.reportValidity === \"function\") {\n          if (!element.reportValidity()) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n  setUserInteracted(el, hasInteracted) {\n    if (hasInteracted) {\n      userInteractedControls.add(el);\n    } else {\n      userInteractedControls.delete(el);\n    }\n    el.requestUpdate();\n  }\n  doAction(type, submitter) {\n    if (this.form) {\n      const button = document.createElement(\"button\");\n      button.type = type;\n      button.style.position = \"absolute\";\n      button.style.width = \"0\";\n      button.style.height = \"0\";\n      button.style.clipPath = \"inset(50%)\";\n      button.style.overflow = \"hidden\";\n      button.style.whiteSpace = \"nowrap\";\n      if (submitter) {\n        button.name = submitter.name;\n        button.value = submitter.value;\n        [\"formaction\", \"formenctype\", \"formmethod\", \"formnovalidate\", \"formtarget\"].forEach((attr) => {\n          if (submitter.hasAttribute(attr)) {\n            button.setAttribute(attr, submitter.getAttribute(attr));\n          }\n        });\n      }\n      this.form.append(button);\n      button.click();\n      button.remove();\n    }\n  }\n  /** Returns the associated `<form>` element, if one exists. */\n  getForm() {\n    var _a;\n    return (_a = this.form) != null ? _a : null;\n  }\n  /** Resets the form, restoring all the control to their default value */\n  reset(submitter) {\n    this.doAction(\"reset\", submitter);\n  }\n  /** Submits the form, triggering validation and form data injection. */\n  submit(submitter) {\n    this.doAction(\"submit\", submitter);\n  }\n  /**\n   * Synchronously sets the form control's validity. Call this when you know the future validity but need to update\n   * the host element immediately, i.e. before Lit updates the component in the next update.\n   */\n  setValidity(isValid) {\n    const host = this.host;\n    const hasInteracted = Boolean(userInteractedControls.has(host));\n    const required = Boolean(host.required);\n    host.toggleAttribute(\"data-required\", required);\n    host.toggleAttribute(\"data-optional\", !required);\n    host.toggleAttribute(\"data-invalid\", !isValid);\n    host.toggleAttribute(\"data-valid\", isValid);\n    host.toggleAttribute(\"data-user-invalid\", !isValid && hasInteracted);\n    host.toggleAttribute(\"data-user-valid\", isValid && hasInteracted);\n  }\n  /**\n   * Updates the form control's validity based on the current value of `host.validity.valid`. Call this when anything\n   * that affects constraint validation changes so the component receives the correct validity states.\n   */\n  updateValidity() {\n    const host = this.host;\n    this.setValidity(host.validity.valid);\n  }\n  /**\n   * Dispatches a non-bubbling, cancelable custom event of type `sl-invalid`.\n   * If the `sl-invalid` event will be cancelled then the original `invalid`\n   * event (which may have been passed as argument) will also be cancelled.\n   * If no original `invalid` event has been passed then the `sl-invalid`\n   * event will be cancelled before being dispatched.\n   */\n  emitInvalidEvent(originalInvalidEvent) {\n    const slInvalidEvent = new CustomEvent(\"sl-invalid\", {\n      bubbles: false,\n      composed: false,\n      cancelable: true,\n      detail: {}\n    });\n    if (!originalInvalidEvent) {\n      slInvalidEvent.preventDefault();\n    }\n    if (!this.host.dispatchEvent(slInvalidEvent)) {\n      originalInvalidEvent == null ? void 0 : originalInvalidEvent.preventDefault();\n    }\n  }\n};\nvar validValidityState = Object.freeze({\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valid: true,\n  valueMissing: false\n});\nvar valueMissingValidityState = Object.freeze(__spreadProps(__spreadValues({}, validValidityState), {\n  valid: false,\n  valueMissing: true\n}));\nvar customErrorValidityState = Object.freeze(__spreadProps(__spreadValues({}, validValidityState), {\n  valid: false,\n  customError: true\n}));\n\nexport {\n  formCollections,\n  FormControlController,\n  validValidityState,\n  valueMissingValidityState,\n  customErrorValidityState\n};\n"],
  "mappings": "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",
  "names": []
}
