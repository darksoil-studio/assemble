{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/assemble-client.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembleClient",
          "members": [
            {
              "kind": "method",
              "name": "createCallToAction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<CallToAction>>"
                }
              },
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "CallToAction"
                  }
                }
              ],
              "description": "Call To Action"
            },
            {
              "kind": "method",
              "name": "getCallToAction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<CallToAction> | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deleteCallToAction",
              "return": {
                "type": {
                  "text": "Promise<ActionHash>"
                }
              },
              "parameters": [
                {
                  "name": "originalCallToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateCallToAction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<CallToAction>>"
                }
              },
              "parameters": [
                {
                  "name": "previousCallToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "name": "updatedCallToAction",
                  "type": {
                    "text": "CallToAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCallToActionsForCallToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<EntryRecord<CallToAction>>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createCommitment",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Commitment>>"
                }
              },
              "parameters": [
                {
                  "name": "commitment",
                  "type": {
                    "text": "Commitment"
                  }
                }
              ],
              "description": "Commitment"
            },
            {
              "kind": "method",
              "name": "getCommitment",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Commitment> | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "commitmentHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCommitmentsForCallToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<EntryRecord<Commitment>>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Satisfaction>>"
                }
              },
              "parameters": [
                {
                  "name": "satisfaction",
                  "type": {
                    "text": "Satisfaction"
                  }
                }
              ],
              "description": "Satisfaction"
            },
            {
              "kind": "method",
              "name": "getSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Satisfaction> | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Satisfaction>>"
                }
              },
              "parameters": [
                {
                  "name": "previousSatisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "name": "updatedSatisfaction",
                  "type": {
                    "text": "Satisfaction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSatisfactionsForCallToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<EntryRecord<Satisfaction>>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSatisfactionsForCommitment",
              "return": {
                "type": {
                  "text": "Promise<Array<EntryRecord<Satisfaction>>>"
                }
              },
              "parameters": [
                {
                  "name": "commitmentHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createAssembly",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Assembly>>"
                }
              },
              "parameters": [
                {
                  "name": "assembly",
                  "type": {
                    "text": "Assembly"
                  }
                }
              ],
              "description": "Assembly"
            },
            {
              "kind": "method",
              "name": "getAssembly",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Assembly> | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "assemblyHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAssembliesForCallToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<EntryRecord<Assembly>>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAssembliesForSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<Array<EntryRecord<Assembly>>>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getOpenCallsToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<ActionHash>>"
                }
              },
              "description": "All Calls To Action"
            },
            {
              "kind": "method",
              "name": "closeCallToAction",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAllAssemblies",
              "return": {
                "type": {
                  "text": "Promise<Array<EntryRecord<Assembly>>>"
                }
              },
              "description": "All Assemblies"
            },
            {
              "kind": "method",
              "name": "getMyCallsToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<ActionHash>>"
                }
              },
              "description": "My Calls To Action"
            },
            {
              "kind": "method",
              "name": "clearCallsToAction",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "callsToActionHashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "ZomeClient",
            "package": "@holochain-open-dev/utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembleClient",
          "declaration": {
            "name": "AssembleClient",
            "module": "src/assemble-client.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/assemble-store.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembleStore",
          "members": [
            {
              "kind": "field",
              "name": "callToActions",
              "default": "new LazyHoloHashMap((callToActionHash: ActionHash) =>\n    pipe(\n      lazyLoadAndPoll(\n        async () => this.client.getCallToAction(callToActionHash),\n        4000\n      ),\n      c => {\n        if (!c) throw new Error('Call to action was not found');\n        return c;\n      }\n    )\n  )",
              "description": "Call To Action"
            },
            {
              "kind": "field",
              "name": "callToActionsForCallToAction",
              "default": "new LazyHoloHashMap(\n    (callToActionHash: ActionHash) =>\n      lazyLoadAndPoll(async () => {\n        const records = await this.client.getCallToActionsForCallToAction(\n          callToActionHash\n        );\n        return records.map(r => r.actionHash);\n      }, 4000)\n  )"
            },
            {
              "kind": "field",
              "name": "commitments",
              "default": "new LazyHoloHashMap((commitmentHash: ActionHash) =>\n    lazyLoadAndPoll(async () => this.client.getCommitment(commitmentHash), 4000)\n  )",
              "description": "Commitment"
            },
            {
              "kind": "field",
              "name": "commitmentsForCallToAction",
              "default": "new LazyHoloHashMap(\n    (callToActionHash: ActionHash) =>\n      lazyLoadAndPoll(\n        async () => this.client.getCommitmentsForCallToAction(callToActionHash),\n        4000\n      )\n  )"
            },
            {
              "kind": "field",
              "name": "satisfactions",
              "default": "new LazyHoloHashMap((satisfactionHash: ActionHash) =>\n    lazyLoadAndPoll(\n      async () => this.client.getSatisfaction(satisfactionHash),\n      4000\n    )\n  )",
              "description": "Satisfaction"
            },
            {
              "kind": "field",
              "name": "satisfactionsForCallToAction",
              "default": "new LazyHoloHashMap(\n    (callToActionHash: ActionHash) =>\n      lazyLoadAndPoll(\n        async () =>\n          this.client.getSatisfactionsForCallToAction(callToActionHash),\n        4000\n      )\n  )"
            },
            {
              "kind": "field",
              "name": "satisfactionsForCommitment",
              "default": "new LazyHoloHashMap(\n    (commitmentHash: ActionHash) =>\n      lazyLoadAndPoll(async () => {\n        const records = await this.client.getSatisfactionsForCommitment(\n          commitmentHash\n        );\n        return records.map(r => r.actionHash);\n      }, 4000)\n  )"
            },
            {
              "kind": "field",
              "name": "assemblies",
              "default": "new LazyHoloHashMap((assemblyHash: ActionHash) =>\n    lazyLoadAndPoll(async () => this.client.getAssembly(assemblyHash), 4000)\n  )",
              "description": "Assembly"
            },
            {
              "kind": "field",
              "name": "assembliesForCallToAction",
              "default": "new LazyHoloHashMap(\n    (callToActionHash: ActionHash) =>\n      lazyLoadAndPoll(async () => {\n        const records = await this.client.getAssembliesForCallToAction(\n          callToActionHash\n        );\n        return records.map(r => r.actionHash);\n      }, 4000)\n  )"
            },
            {
              "kind": "field",
              "name": "assembliesForSatisfaction",
              "default": "new LazyHoloHashMap(\n    (satisfactionHash: ActionHash) =>\n      lazyLoadAndPoll(async () => {\n        const records = await this.client.getAssembliesForSatisfaction(\n          satisfactionHash\n        );\n        return records.map(r => r.actionHash);\n      }, 4000)\n  )"
            },
            {
              "kind": "field",
              "name": "openCallsToAction",
              "description": "All Calls To Action"
            },
            {
              "kind": "field",
              "name": "allAssemblies",
              "description": "All Assemblies"
            },
            {
              "kind": "field",
              "name": "myCallsToAction",
              "description": "My Calls To Action"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembleStore",
          "declaration": {
            "name": "AssembleStore",
            "module": "src/assemble-store.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "assembleStoreContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "assembleStoreContext",
          "declaration": {
            "name": "assembleStoreContext",
            "module": "src/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./assemble-store.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./assemble-client.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mocks.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembleZomeMock",
          "members": [
            {
              "kind": "field",
              "name": "callToAction",
              "default": "new RecordBag<CallToAction>()",
              "description": "Call To Action"
            },
            {
              "kind": "field",
              "name": "callToActionsForCallToAction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "method",
              "name": "create_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "CallToAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Record | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "delete_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<ActionHash>"
                }
              },
              "parameters": [
                {
                  "name": "original_call_to_action_hash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "update_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "{\n    previous_call_to_action_hash: ActionHash;\n    updated_call_to_action: CallToAction;\n  }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_call_to_actions_for_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "commitment",
              "default": "new RecordBag<Commitment>()",
              "description": "Promise"
            },
            {
              "kind": "field",
              "name": "commitmentsForCallToAction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "method",
              "name": "create_commitment",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "commitment",
                  "type": {
                    "text": "Commitment"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_commitment",
              "return": {
                "type": {
                  "text": "Promise<Record | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "commitmentHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_commitments_for_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "satisfaction",
              "default": "new RecordBag<Satisfaction>()",
              "description": "Satisfaction"
            },
            {
              "kind": "field",
              "name": "satisfactionsForCallToAction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "field",
              "name": "satisfactionsForCommitment",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "method",
              "name": "create_satisfaction",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "satisfaction",
                  "type": {
                    "text": "Satisfaction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_satisfaction",
              "return": {
                "type": {
                  "text": "Promise<Record | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "update_satisfaction",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "{\n    previous_satisfaction_hash: ActionHash;\n    updated_satisfaction: Satisfaction;\n  }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_satisfactions_for_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_satisfactions_for_commitment",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "commitmentHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "assembly",
              "default": "new RecordBag<Assembly>()",
              "description": "Assembly"
            },
            {
              "kind": "field",
              "name": "assembliesForCallToAction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "field",
              "name": "assembliesForSatisfaction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "method",
              "name": "create_assembly",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "assembly",
                  "type": {
                    "text": "Assembly"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_assembly",
              "return": {
                "type": {
                  "text": "Promise<Record | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "assemblyHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_assemblies_for_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_assemblies_for_satisfaction",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_open_calls_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_all_assemblies",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_my_calls_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<Record>>"
                }
              },
              "parameters": [
                {
                  "name": "author",
                  "type": {
                    "text": "AgentPubKey"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "ZomeMock",
            "package": "@holochain-open-dev/utils"
          }
        },
        {
          "kind": "function",
          "name": "sampleCallToAction",
          "return": {
            "type": {
              "text": "CallToAction"
            }
          }
        },
        {
          "kind": "function",
          "name": "sampleCommitment",
          "return": {
            "type": {
              "text": "Commitment"
            }
          }
        },
        {
          "kind": "function",
          "name": "sampleSatisfaction",
          "return": {
            "type": {
              "text": "Satisfaction"
            }
          }
        },
        {
          "kind": "function",
          "name": "sampleAssembly",
          "return": {
            "type": {
              "text": "Assembly"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembleZomeMock",
          "declaration": {
            "name": "AssembleZomeMock",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleCallToAction",
          "declaration": {
            "name": "sampleCallToAction",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleCommitment",
          "declaration": {
            "name": "sampleCommitment",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleSatisfaction",
          "declaration": {
            "name": "sampleSatisfaction",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleAssembly",
          "declaration": {
            "name": "sampleAssembly",
            "module": "src/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/all-assemblies.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AllAssemblies",
          "members": [
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "all-assemblies",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AllAssemblies",
          "declaration": {
            "name": "AllAssemblies",
            "module": "src/elements/all-assemblies.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "all-assemblies",
          "declaration": {
            "name": "AllAssemblies",
            "module": "src/elements/all-assemblies.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assemble-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembleContext",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "AssembleStore"
              },
              "attribute": "store"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "AssembleStore"
              },
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assemble-context",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembleContext",
          "declaration": {
            "name": "AssembleContext",
            "module": "src/elements/assemble-context.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assemble-context",
          "declaration": {
            "name": "AssembleContext",
            "module": "src/elements/assemble-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assemblies-for-call-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembliesForCallToAction",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assemblies-for-call-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembliesForCallToAction",
          "declaration": {
            "name": "AssembliesForCallToAction",
            "module": "src/elements/assemblies-for-call-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assemblies-for-call-to-action",
          "declaration": {
            "name": "AssembliesForCallToAction",
            "module": "src/elements/assemblies-for-call-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assemblies-for-satisfaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembliesForSatisfaction",
          "members": [
            {
              "kind": "field",
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "satisfactionHash"
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "satisfactionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assemblies-for-satisfaction",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembliesForSatisfaction",
          "declaration": {
            "name": "AssembliesForSatisfaction",
            "module": "src/elements/assemblies-for-satisfaction.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assemblies-for-satisfaction",
          "declaration": {
            "name": "AssembliesForSatisfaction",
            "module": "src/elements/assemblies-for-satisfaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assembly-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssemblyDetail",
          "members": [
            {
              "kind": "field",
              "name": "assemblyHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "assemblyHash"
            },
            {
              "kind": "method",
              "name": "renderDetail",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Assembly>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "detail will contain { assemblyHash }",
              "name": "assembly-deleted:"
            }
          ],
          "attributes": [
            {
              "name": "assemblyHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "assemblyHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assembly-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssemblyDetail",
          "declaration": {
            "name": "AssemblyDetail",
            "module": "src/elements/assembly-detail.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assembly-detail",
          "declaration": {
            "name": "AssemblyDetail",
            "module": "src/elements/assembly-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assembly-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssemblySummary",
          "members": [
            {
              "kind": "field",
              "name": "assemblyHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "assemblyHash"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Assembly>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "assembly-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { assemblyHash }",
              "name": "assembly-selected:"
            }
          ],
          "attributes": [
            {
              "name": "assemblyHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "assemblyHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assembly-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssemblySummary",
          "declaration": {
            "name": "AssemblySummary",
            "module": "src/elements/assembly-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assembly-summary",
          "declaration": {
            "name": "AssemblySummary",
            "module": "src/elements/assembly-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-need-form.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionNeedForm",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'need'",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "Need | undefined"
              },
              "description": "The default value of the field if this element is used inside a form",
              "attribute": "defaultValue"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is disabled if this element is used inside a form"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "reset"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'need'",
              "fieldName": "name"
            },
            {
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "description"
            },
            {
              "name": "defaultValue",
              "type": {
                "text": "Need | undefined"
              },
              "description": "The default value of the field if this element is used inside a form",
              "fieldName": "defaultValue"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-needs-form",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionNeedForm",
          "declaration": {
            "name": "CallToActionNeedForm",
            "module": "src/elements/call-to-action-need-form.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-need-form",
          "declaration": {
            "name": "CallToActionNeedForm",
            "module": "src/elements/call-to-action-need-form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-need-progress.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionNeedProgress",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "needIndex",
              "type": {
                "text": "number"
              },
              "attribute": "needIndex"
            },
            {
              "kind": "method",
              "name": "showBar",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNeedProgress",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                },
                {
                  "name": "satisfactions",
                  "type": {
                    "text": "Array<EntryRecord<Satisfaction>>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "needIndex",
              "type": {
                "text": "number"
              },
              "fieldName": "needIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-needs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionNeedProgress",
          "declaration": {
            "name": "CallToActionNeedProgress",
            "module": "src/elements/call-to-action-need-progress.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-need-progress",
          "declaration": {
            "name": "CallToActionNeedProgress",
            "module": "src/elements/call-to-action-need-progress.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-needs-form.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionNeedsForm",
          "members": [
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "Array<Need>"
              },
              "default": "[\n    {\n      description: '',\n      min_necessary: 0,\n      max_possible: undefined,\n    },\n  ]",
              "description": "The default value of the field if this element is used inside a form",
              "attribute": "defaultValue"
            },
            {
              "kind": "field",
              "name": "allowEmpty",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "allow-empty"
            },
            {
              "kind": "method",
              "name": "needForms",
              "return": {
                "type": {
                  "text": "CallToActionNeedForm[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "method",
              "name": "renderNeedForm",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "defaultValue",
              "type": {
                "text": "Array<Need>"
              },
              "default": "[\n    {\n      description: '',\n      min_necessary: 0,\n      max_possible: undefined,\n    },\n  ]",
              "description": "The default value of the field if this element is used inside a form",
              "fieldName": "defaultValue"
            },
            {
              "name": "allow-empty",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "allowEmpty"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-needs-form",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionNeedsForm",
          "declaration": {
            "name": "CallToActionNeedsForm",
            "module": "src/elements/call-to-action-needs-form.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-needs-form",
          "declaration": {
            "name": "CallToActionNeedsForm",
            "module": "src/elements/call-to-action-needs-form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-progress.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionProgress",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            }
          ],
          "events": [
            {
              "description": "detail will contain { callToActionHash }",
              "name": "call-to-action-selected:"
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-progress",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionProgress",
          "declaration": {
            "name": "CallToActionProgress",
            "module": "src/elements/call-to-action-progress.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-progress",
          "declaration": {
            "name": "CallToActionProgress",
            "module": "src/elements/call-to-action-progress.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-satisfied-needs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionSatisfiedNeeds",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "attribute": "hideNeeds"
            },
            {
              "kind": "method",
              "name": "amIAuthor",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createAssembly",
              "parameters": [
                {
                  "name": "satisfactions_hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCommitment",
              "parameters": [
                {
                  "name": "commitment",
                  "type": {
                    "text": "EntryRecord<Commitment>"
                  }
                },
                {
                  "name": "displayAmount",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCommitmentsForNeed",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                },
                {
                  "name": "needIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderMetNeeds",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                },
                {
                  "name": "needs",
                  "type": {
                    "text": "Array<[Need, number]>"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                },
                {
                  "name": "satisfactions",
                  "type": {
                    "text": "Array<EntryRecord<Satisfaction>>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "assembly-created",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "fieldName": "hideNeeds"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-satisfied-needs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionSatisfiedNeeds",
          "declaration": {
            "name": "CallToActionSatisfiedNeeds",
            "module": "src/elements/call-to-action-satisfied-needs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-satisfied-needs",
          "declaration": {
            "name": "CallToActionSatisfiedNeeds",
            "module": "src/elements/call-to-action-satisfied-needs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionSummary",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCallToAction"
            }
          ],
          "events": [
            {
              "name": "call-to-action-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { callToActionHash }",
              "name": "call-to-action-selected:"
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionSummary",
          "declaration": {
            "name": "CallToActionSummary",
            "module": "src/elements/call-to-action-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-summary",
          "declaration": {
            "name": "CallToActionSummary",
            "module": "src/elements/call-to-action-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-unsatisfied-needs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionUnsatisfiedNeeds",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "attribute": "hideNeeds"
            },
            {
              "kind": "method",
              "name": "amIAuthor",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createAssembly",
              "parameters": [
                {
                  "name": "satisfactions_hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCommitment",
              "parameters": [
                {
                  "name": "commitment",
                  "type": {
                    "text": "EntryRecord<Commitment>"
                  }
                },
                {
                  "name": "displayAmount",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCommitmentsForNeed",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                },
                {
                  "name": "needIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderUnmetNeeds",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                },
                {
                  "name": "needs",
                  "type": {
                    "text": "Array<[Need, number]>"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "assembly-created",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "fieldName": "hideNeeds"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-needs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionUnsatisfiedNeeds",
          "declaration": {
            "name": "CallToActionUnsatisfiedNeeds",
            "module": "src/elements/call-to-action-unsatisfied-needs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-unsatisfied-needs",
          "declaration": {
            "name": "CallToActionUnsatisfiedNeeds",
            "module": "src/elements/call-to-action-unsatisfied-needs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-actions-for-call-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionsForCallToAction",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-actions-for-call-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionsForCallToAction",
          "declaration": {
            "name": "CallToActionsForCallToAction",
            "module": "src/elements/call-to-actions-for-call-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-actions-for-call-to-action",
          "declaration": {
            "name": "CallToActionsForCallToAction",
            "module": "src/elements/call-to-actions-for-call-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/commitment-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CommitmentDetail",
          "members": [
            {
              "kind": "field",
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "commitmentHash"
            },
            {
              "kind": "method",
              "name": "renderDetail",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Commitment>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "detail will contain { commitmentHash }",
              "name": "commitment-deleted:"
            }
          ],
          "attributes": [
            {
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "commitmentHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "commitment-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CommitmentDetail",
          "declaration": {
            "name": "CommitmentDetail",
            "module": "src/elements/commitment-detail.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "commitment-detail",
          "declaration": {
            "name": "CommitmentDetail",
            "module": "src/elements/commitment-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/commitment-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CommitmentSummary",
          "members": [
            {
              "kind": "field",
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "commitmentHash"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Commitment>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCommitment"
            }
          ],
          "events": [
            {
              "name": "commitment-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { commitmentHash }",
              "name": "commitment-selected:"
            }
          ],
          "attributes": [
            {
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "commitmentHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "commitment-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CommitmentSummary",
          "declaration": {
            "name": "CommitmentSummary",
            "module": "src/elements/commitment-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "commitment-summary",
          "declaration": {
            "name": "CommitmentSummary",
            "module": "src/elements/commitment-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-assembly.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CreateAssembly",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "satisfactionsHashes",
              "type": {
                "text": "Array<ActionHash>"
              },
              "attribute": "satisfactionsHashes"
            },
            {
              "kind": "method",
              "name": "createAssembly",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "assembly-created",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { assemblyHash }",
              "name": "assembly-created:"
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "satisfactionsHashes",
              "type": {
                "text": "Array<ActionHash>"
              },
              "fieldName": "satisfactionsHashes"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-assembly",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateAssembly",
          "declaration": {
            "name": "CreateAssembly",
            "module": "src/elements/create-assembly.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "create-assembly",
          "declaration": {
            "name": "CreateAssembly",
            "module": "src/elements/create-assembly.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-commitment.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CreateCommitment",
          "members": [
            {
              "kind": "field",
              "name": "callToAction",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "attribute": "callToAction"
            },
            {
              "kind": "field",
              "name": "needIndex",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "needIndex"
            },
            {
              "kind": "method",
              "name": "show"
            },
            {
              "kind": "method",
              "name": "createCommitment",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "commitment-created",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { commitmentHash }",
              "name": "commitment-created:"
            }
          ],
          "attributes": [
            {
              "name": "callToAction",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "fieldName": "callToAction"
            },
            {
              "name": "needIndex",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "needIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-commitment",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateCommitment",
          "declaration": {
            "name": "CreateCommitment",
            "module": "src/elements/create-commitment.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "create-commitment",
          "declaration": {
            "name": "CreateCommitment",
            "module": "src/elements/create-commitment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-satisfaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CreateSatisfaction",
          "members": [
            {
              "kind": "field",
              "name": "callToAction",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "attribute": "callToAction"
            },
            {
              "kind": "field",
              "name": "needIndex",
              "type": {
                "text": "number"
              },
              "attribute": "needIndex"
            },
            {
              "kind": "field",
              "name": "commitments",
              "type": {
                "text": "Array<EntryRecord<Commitment>> | undefined"
              },
              "attribute": "commitments"
            },
            {
              "kind": "method",
              "name": "show"
            },
            {
              "kind": "method",
              "name": "createSatisfaction",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderAmount",
              "parameters": [
                {
                  "name": "commitment",
                  "type": {
                    "text": "EntryRecord<Commitment>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "satisfaction-created",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { satisfactionHash }",
              "name": "satisfaction-created:"
            }
          ],
          "attributes": [
            {
              "name": "callToAction",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "fieldName": "callToAction"
            },
            {
              "name": "needIndex",
              "type": {
                "text": "number"
              },
              "fieldName": "needIndex"
            },
            {
              "name": "commitments",
              "type": {
                "text": "Array<EntryRecord<Commitment>> | undefined"
              },
              "fieldName": "commitments"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-satisfaction",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateSatisfaction",
          "declaration": {
            "name": "CreateSatisfaction",
            "module": "src/elements/create-satisfaction.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "create-satisfaction",
          "declaration": {
            "name": "CreateSatisfaction",
            "module": "src/elements/create-satisfaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/edit-call-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EditCallToAction",
          "members": [
            {
              "kind": "field",
              "name": "currentRecord",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "attribute": "currentRecord"
            },
            {
              "kind": "method",
              "name": "updateCallToAction",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "call-to-action-updated",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "edit-canceled",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { previousCallToActionHash, updatedCallToActionHash }",
              "name": "call-to-action-updated:"
            }
          ],
          "attributes": [
            {
              "name": "currentRecord",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "fieldName": "currentRecord"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "edit-call-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditCallToAction",
          "declaration": {
            "name": "EditCallToAction",
            "module": "src/elements/edit-call-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "edit-call-to-action",
          "declaration": {
            "name": "EditCallToAction",
            "module": "src/elements/edit-call-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/edit-satisfaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EditSatisfaction",
          "members": [
            {
              "kind": "field",
              "name": "currentRecord",
              "type": {
                "text": "EntryRecord<Satisfaction>"
              },
              "attribute": "currentRecord"
            },
            {
              "kind": "method",
              "name": "updateSatisfaction",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "satisfaction-updated",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "edit-canceled",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { previousSatisfactionHash, updatedSatisfactionHash }",
              "name": "satisfaction-updated:"
            }
          ],
          "attributes": [
            {
              "name": "currentRecord",
              "type": {
                "text": "EntryRecord<Satisfaction>"
              },
              "fieldName": "currentRecord"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "edit-satisfaction",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditSatisfaction",
          "declaration": {
            "name": "EditSatisfaction",
            "module": "src/elements/edit-satisfaction.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "edit-satisfaction",
          "declaration": {
            "name": "EditSatisfaction",
            "module": "src/elements/edit-satisfaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/my-calls-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyCallsToAction",
          "members": [
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "my-calls-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyCallsToAction",
          "declaration": {
            "name": "MyCallsToAction",
            "module": "src/elements/my-calls-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "my-calls-to-action",
          "declaration": {
            "name": "MyCallsToAction",
            "module": "src/elements/my-calls-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/open-calls-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "OpenCallsToAction",
          "members": [
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "open-calls-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OpenCallsToAction",
          "declaration": {
            "name": "OpenCallsToAction",
            "module": "src/elements/open-calls-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "open-calls-to-action",
          "declaration": {
            "name": "OpenCallsToAction",
            "module": "src/elements/open-calls-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/satisfaction-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SatisfactionDetail",
          "members": [
            {
              "kind": "field",
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "satisfactionHash"
            },
            {
              "kind": "method",
              "name": "renderDetail",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Satisfaction>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "detail will contain { satisfactionHash }",
              "name": "satisfaction-deleted:"
            }
          ],
          "attributes": [
            {
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "satisfactionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "satisfaction-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SatisfactionDetail",
          "declaration": {
            "name": "SatisfactionDetail",
            "module": "src/elements/satisfaction-detail.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "satisfaction-detail",
          "declaration": {
            "name": "SatisfactionDetail",
            "module": "src/elements/satisfaction-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/satisfaction-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SatisfactionSummary",
          "members": [
            {
              "kind": "field",
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "satisfactionHash"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Satisfaction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderSatisfaction"
            }
          ],
          "events": [
            {
              "name": "satisfaction-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { satisfactionHash }",
              "name": "satisfaction-selected:"
            }
          ],
          "attributes": [
            {
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "satisfactionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "satisfaction-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SatisfactionSummary",
          "declaration": {
            "name": "SatisfactionSummary",
            "module": "src/elements/satisfaction-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "satisfaction-summary",
          "declaration": {
            "name": "SatisfactionSummary",
            "module": "src/elements/satisfaction-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/satisfactions-for-promise.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SatisfactionsForCommitment",
          "members": [
            {
              "kind": "field",
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "commitmentHash"
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "commitmentHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "satisfactions-for-commitment",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SatisfactionsForCommitment",
          "declaration": {
            "name": "SatisfactionsForCommitment",
            "module": "src/elements/satisfactions-for-promise.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "satisfactions-for-commitment",
          "declaration": {
            "name": "SatisfactionsForCommitment",
            "module": "src/elements/satisfactions-for-promise.ts"
          }
        }
      ]
    }
  ]
}
