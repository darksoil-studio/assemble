{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "locales/ca.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{\n      's04dc5daea8ffcb1b': `Mín.`,\n's07834954afa4b6d9': `La contribució ha esta cancel·lada`,\n's08b06007b5567108': `de`,\n's09e0eab6e02bc393': `S'enviarà una alerta a tots els participants de l'event.`,\n's0d9e6884f8c4ba1a': `Necessitats`,\n's10aa05aa50d278b9': `Requereix aprovació de l'administrador`,\n's10f50336534b13d7': `No hi ha mín. ni máx.`,\n's1244485ebc6b7d0a': `Mín. i Máx.`,\n's1d5bb8155f842a8d': `Satisfacció`,\n's258f7773578f509b': `Editar la Satisfacció`,\n's2873489db50fee52': `Editar la Crida a l'Acció`,\n's28c37787e4765e58': `Error creant la crida a l'acció`,\n's2a71fae095e55879': `Encara no hi ha cap necessitat.`,\n's2b9e39425bfcc804': `Màx. possible`,\n's2bcc52b8378d6fd3': `Cancel·lar la Contribució`,\n's2ceb11be2290bb1b': `Cancel·lar`,\n's2d49e7bc149b45f6': `Aquesta crida a l'acció no te cap necessitat requerida.`,\n's30c6728e592f4560': `Afegir Necessitat`,\n's3139c52a1117c905': `Pacte`,\n's33f85f24c0f5f008': `Guardar`,\n's39f1f603c775a5b3': `No hi ha cap necessitat satisfeta.`,\n's3ccb73a74da91bf0': `No s'ha trobat el compromís`,\n's3e07827b85a6779a': `Contribuïr`,\n's40326a98f486d818': `Error creant el compromís`,\n's43eb64ba7056a741': `No s'ha trobat el pacte`,\n's49b4a5aecfdd8e35': `Màx.`,\n's524827c85a293dab': `Crear Pacte`,\n's5259c79873512bfc': `Error buscant el pacte`,\n's5cdaaf1e8ed09fa1': `Error buscant la crida a l'acció`,\n's5f8492d41fc62041': `S'ha compromés a contribuir`,\n's62a1100d991c6f2c': `Error buscant la satisfacció`,\n's63d894b1ddb06289': `Descripció`,\n's64dbbddf00d4c5ee': `Compromisos Cancel·lats`,\n's661045907dd942bc': `Compromís`,\n's695afc099cb2281c': `Mín. requerit`,\n's6a952825a82ea974': `Aquesta necessitat s'ha satisfet sense contribucions.`,\n's6d52cebcaa70b474': `Comprometre'm a Contribuir`,\n's75f8021355029843': `Descripció de la necessitat*`,\n's7e7b17262f41a198': `Error buscant els compromisos per a aquesta crida a l'acció`,\n's8217b4cf2a9d5a97': `Contribucions Addicionals`,\n's906fe9255792554f': `No hi ha cap compromís cancel·lat.`,\n's950600ee56db1843': `Sense comentari`,\n's983762ecac7f91d6': `Error buscant la crida a l'acció`,\n's993dbfafb7511653': `Error acceptant el compromís`,\n's9dc338f31cc6c22c': `La crida a l'acció no existeix`,\n'sa38fc58e91a0562d': `Error creant el pacte`,\n'sa7f40d9c3baa9830': `No hi ha cap necessitat no satisfeta.`,\n'sabf9ff4d7b13d288': `Error buscant els pactes`,\n'sabfa03dfc4fa6bda': `No hi ha cap contribució addicional.`,\n'saf84ec86139d349e': `Comentari`,\n'saf9aab12d5299951': `No s'ha trobat cap pacte per a aquest satisfacció`,\n'sb1a3927bb18ccaf2': `Estás segur? Encara no hi ha cap compromís a contribuir per a aquesta necessitat.`,\n'sb4ee10dd8a1622bc': `Encara no hi ha cap contribució per a aquesta necessitat.`,\n'sb65d8265eefc5783': `Només un.`,\n'sb75af2a639e7fa01': `Error carregant el progrés de la crida a l'acció`,\n'sb97c2f40b5f2dd89': `No tens cap contribució.`,\n'sba6d2aebd8696a70': `Satisfeta Per`,\n'sba98a7152d80b949': `Quantitat`,\n'sce13ce26519c5565': `Error creant la satisfacció`,\n'sd63b87e98ed1536f': `Encara no hi ha cap contribució.`,\n'sd9c91e17e3d7bcbd': `Error buscant el compromís`,\n'se7229fcfe421ebe1': `S'ha arribat al màx. de contribucions possibles`,\n'se87af0982795d20a': `Error buscant els compromisos`,\n'sef2cd24ab375df7e': `Selecciona els compromisos que satisfan aquesta necessitat.`,\n'sf44cc868276931a1': `No s'ha trobat la crida a l'acció`,\n'sf587cc61d3dfb90e': `Satisfer Necessitat`,\n'sf5fd459d08e41134': `No s'ha trobat cap pacte per a aquesta crida a l'acció`,\n'sf6178cb3480a86ce': `No s'ha trobat cap crida a l'acció per a aquesta crida a l'acció`,\n'sf67e6e365e1dd961': `s'ha compromés a contribuir`,\n'sfdebb1ce66502f94': `Contribucions`,\n'sfff952497e3fb6d1': `No s'ha trobat la satisfacció`,\n    }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/ca.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/de.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{\n      's04dc5daea8ffcb1b': `Min.`,\n's07834954afa4b6d9': `Verpflichtung wurde zurückgezogen`,\n's08b06007b5567108': `des`,\n's09e0eab6e02bc393': `Dies wird alle Event-Teilnehmer benachrichtigen.`,\n's0d9e6884f8c4ba1a': `Anforderungen`,\n's10aa05aa50d278b9': `Benötigt Zustimmung einer Person mit Admin Berechtigung`,\n's10f50336534b13d7': `Kein min. oder max.`,\n's1244485ebc6b7d0a': `Min. und Max.`,\n's1d5bb8155f842a8d': `Pflichterfüllung`,\n's258f7773578f509b': `Pflichterfüllung bearbeiten`,\n's2873489db50fee52': `Aufforderung bearbeiten`,\n's28c37787e4765e58': `Aufforderung erstellen fehlgeschlagen`,\n's2a71fae095e55879': `Noch keine Anforderungen.`,\n's2b9e39425bfcc804': `Max. möglich`,\n's2bcc52b8378d6fd3': `Verpflichtung zurückziehen`,\n's2ceb11be2290bb1b': `Abbrechen`,\n's2d49e7bc149b45f6': `Dieser Aufruf hat keine Anforderungen.`,\n's30c6728e592f4560': `Anforderung hinzufügen`,\n's3139c52a1117c905': `Zusammenkunft`,\n's33f85f24c0f5f008': `Speichern`,\n's39f1f603c775a5b3': `Keine erfüllten Anforderungen.`,\n's3ccb73a74da91bf0': `Die angeforderte Verpflichtung existiert nicht`,\n's3e07827b85a6779a': `Beitragen`,\n's40326a98f486d818': `Verpflichtung erzeugen fehlgeschlagen`,\n's43eb64ba7056a741': `Die angeforderte Zusammenkunft existiert nicht`,\n's49b4a5aecfdd8e35': `Max.`,\n's524827c85a293dab': `Zusammenkunft erstellen`,\n's5259c79873512bfc': `Zusammenkunft laden fehlgeschlagen`,\n's5cdaaf1e8ed09fa1': `Aufruf laden fehlgeschlagen`,\n's5f8492d41fc62041': `Zur Erfüllung verpflichtet`,\n's62a1100d991c6f2c': `Pflichterfüllung laden fehlgeschlagen`,\n's63d894b1ddb06289': `Beschreibung`,\n's64dbbddf00d4c5ee': `Zurückgezogene Verpflichtungen`,\n's661045907dd942bc': `Verpflichtung eingehen`,\n's695afc099cb2281c': `Min. benötigt`,\n's6a952825a82ea974': `Diese Anforderungen wurde erfüllt, ohne dass sich jemand dazu verpflichted hat.`,\n's6d52cebcaa70b474': `Verpflichtung mitzuwirken`,\n's75f8021355029843': `Benötigt Beschreibung*`,\n's7e7b17262f41a198': `Verpflichtungen laden fehlgeschlagen.`,\n's8217b4cf2a9d5a97': `Zusätzliche Verpflichtungen`,\n's906fe9255792554f': `Es gibt keine zurückgezogenen Verpflichtungen.`,\n's950600ee56db1843': `Kein Kommentar`,\n's983762ecac7f91d6': `Aufrufe laden ist fehlgeschlagen`,\n's993dbfafb7511653': `Verpflichtung akzeptieren fehlgeschlagen`,\n's9dc338f31cc6c22c': `Der angeforderte Aufruf existiert nicht`,\n'sa38fc58e91a0562d': `Zusammenkunft erstellen fehlgeschlagen`,\n'sa7f40d9c3baa9830': `Es gibt keine unerfüllten Anforderungen.`,\n'sabf9ff4d7b13d288': `Zusammenkünfte laden fehlgeschlagen`,\n'sabfa03dfc4fa6bda': `Es gibt keine zusätzlichen Verpflichtungen.`,\n'saf84ec86139d349e': `Kommentar`,\n'saf9aab12d5299951': `Keine Zusammenkünfte gefunden für diese Pflichterfüllung`,\n'sb1a3927bb18ccaf2': `Bist du sicher? Es hat sich noch niemand verpflichtet, diese Anforderung zu erfüllen.`,\n'sb4ee10dd8a1622bc': `Es hat noch niemand zu dieser Anforderung beigetragen.`,\n'sb65d8265eefc5783': `Nur eins.`,\n'sb75af2a639e7fa01': `Fortschritt laden fehlgeschlagen`,\n'sb97c2f40b5f2dd89': `Du hast noch keine Beiträge.`,\n'sba6d2aebd8696a70': `Erfüllt durch`,\n'sba98a7152d80b949': `Menge`,\n'sce13ce26519c5565': `Pflichterfüllung hinzufügen fehlgeschlagen`,\n'sd63b87e98ed1536f': `Es gibt noch keine Verpflichtungen.`,\n'sd9c91e17e3d7bcbd': `Verpflichtung laden fehlgeschlagen`,\n'se7229fcfe421ebe1': `Maximale Anzahl Verpflichtungen erreicht`,\n'se87af0982795d20a': `Verpflichtungen laden fehlgeschlagen`,\n'sef2cd24ab375df7e': `Wähle die Verpflichtungen, die diese Anforderungen erfüllen.`,\n'sf44cc868276931a1': `Der gesuchte Aufruf wurde nicht gefunden`,\n'sf587cc61d3dfb90e': `Anforderung erfüllen`,\n'sf5fd459d08e41134': `Keine Zusammenkünfte gefunden für diesen Aufruf`,\n'sf6178cb3480a86ce': `Keine Aufrufe gefunden für diesen Aufruf`,\n'sf67e6e365e1dd961': `hat sich verpflichtet, beizutragen`,\n'sfdebb1ce66502f94': `Beiträge`,\n'sfff952497e3fb6d1': `Die angefragte Pflichterfüllung existiert nicht`,\n    }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/de.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/es.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{\n      's04dc5daea8ffcb1b': `Mín.`,\n's07834954afa4b6d9': `La contribución ha sido cancelada`,\n's08b06007b5567108': `de`,\n's09e0eab6e02bc393': `Se enviará una notificación a todos los participantes del evento.`,\n's0d9e6884f8c4ba1a': `Necesidades`,\n's10aa05aa50d278b9': `Requiere aprovación del administrador`,\n's10f50336534b13d7': `No hay mín. ni máx.`,\n's1244485ebc6b7d0a': `Mín. y Máx.`,\n's1d5bb8155f842a8d': `Satisfacción`,\n's258f7773578f509b': `Editar Satisacción`,\n's2873489db50fee52': `Editar Llamada a la Acción`,\n's28c37787e4765e58': `Error creando la llamada a la acción`,\n's2a71fae095e55879': `Aún no hay ninguna necesidad.`,\n's2b9e39425bfcc804': `Máx. posible`,\n's2bcc52b8378d6fd3': `Cancelar Contribución`,\n's2ceb11be2290bb1b': `Cancelar`,\n's2d49e7bc149b45f6': `Esta llamada a la acción no tiene ninguna necesidad requerida.`,\n's30c6728e592f4560': `Añadir Necesidad`,\n's3139c52a1117c905': `Pacto`,\n's33f85f24c0f5f008': `Guardar`,\n's39f1f603c775a5b3': `No hay ninguna necesidad satisfecha.`,\n's3ccb73a74da91bf0': `El compromiso no existe`,\n's3e07827b85a6779a': `Contribuir`,\n's40326a98f486d818': `Error creando el compromiso`,\n's43eb64ba7056a741': `El pacto no existe`,\n's49b4a5aecfdd8e35': `Máx.`,\n's524827c85a293dab': `Crear Pacto`,\n's5259c79873512bfc': `Error buscando el pacto`,\n's5cdaaf1e8ed09fa1': `Error cargando la llamada a la acción`,\n's5f8492d41fc62041': `Se ha comprometido a contribuir`,\n's62a1100d991c6f2c': `Error buscando la satisfacción`,\n's63d894b1ddb06289': `Descripción`,\n's64dbbddf00d4c5ee': `Compromisos Cancelados`,\n's661045907dd942bc': `Compromiso`,\n's695afc099cb2281c': `Mín. requerido`,\n's6a952825a82ea974': `Esta necesidad fue satisfecha sin ninguna contribución.`,\n's6d52cebcaa70b474': `Compromiso a Contribuir`,\n's75f8021355029843': `Descripción de la necesidad*`,\n's7e7b17262f41a198': `Error buscando los compromisos para esta llamada a la acción`,\n's8217b4cf2a9d5a97': `Contribuciones Adicionales`,\n's906fe9255792554f': `No hay ningún compromiso cancelado.`,\n's950600ee56db1843': `Sin comentario`,\n's983762ecac7f91d6': `Error buscando la llamada a la acción`,\n's993dbfafb7511653': `Error aceptando el compromiso`,\n's9dc338f31cc6c22c': `La llamada a la acción no existe`,\n'sa38fc58e91a0562d': `Error creando el pacto`,\n'sa7f40d9c3baa9830': `No hay ninguna necesidad no satisfecha`,\n'sabf9ff4d7b13d288': `Error buscando los pactos`,\n'sabfa03dfc4fa6bda': `No hay ninguna contribución adicional.`,\n'saf84ec86139d349e': `Comentario`,\n'saf9aab12d5299951': `No se ha encontrado ningún pacto para esta satisfacción`,\n'sb1a3927bb18ccaf2': `Estás seguro? Aún no hay ningún ninguna contribución para esta necesidad.`,\n'sb4ee10dd8a1622bc': `Aún no hay ninguna contribución para esta necesidad.`,\n'sb65d8265eefc5783': `Solamente uno.`,\n'sb75af2a639e7fa01': `Error cargando el progreso de la llamada a la acción`,\n'sb97c2f40b5f2dd89': `No has hecho ninguna contribución.`,\n'sba6d2aebd8696a70': `Satisfecha Por`,\n'sba98a7152d80b949': `Cantidad`,\n'sce13ce26519c5565': `Error creando la satisfacción`,\n'sd63b87e98ed1536f': `Aún no hay ninguna contribución.`,\n'sd9c91e17e3d7bcbd': `Error buscando el compromiso`,\n'se7229fcfe421ebe1': `Se ha alcanzado el número de contribuciones máx.`,\n'se87af0982795d20a': `Error buscando los compromisos.`,\n'sef2cd24ab375df7e': `Selecciona los compromisos que satisfacen esta necesidad.`,\n'sf44cc868276931a1': `La llamada a la acción no fue encontrada.`,\n'sf587cc61d3dfb90e': `Satisfacer esta necesidad`,\n'sf5fd459d08e41134': `No hay ningún pacto para esta llamada a la acción`,\n'sf6178cb3480a86ce': `No se ha encontrado ninguna llamada a la acción para esta llamada a la acción`,\n'sf67e6e365e1dd961': `se comprometió a contribuir`,\n'sfdebb1ce66502f94': `Contribuciones`,\n'sfff952497e3fb6d1': `La satisfacción no existe`,\n    }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/es.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/locales.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "sourceLocale",
          "default": "`en`",
          "description": "The locale code that templates in this source code are written in."
        },
        {
          "kind": "variable",
          "name": "targetLocales",
          "type": {
            "text": "array"
          },
          "default": "[\n  `ca`,\n  `de`,\n  `es`,\n  `sv`,\n]",
          "description": "The other locale codes that this application is localized into. Sorted\nlexicographically."
        },
        {
          "kind": "variable",
          "name": "allLocales",
          "type": {
            "text": "array"
          },
          "default": "[\n  `ca`,\n  `de`,\n  `en`,\n  `es`,\n  `sv`,\n]",
          "description": "All valid project locale codes. Sorted lexicographically."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sourceLocale",
          "declaration": {
            "name": "sourceLocale",
            "module": "locales/locales.js"
          }
        },
        {
          "kind": "js",
          "name": "targetLocales",
          "declaration": {
            "name": "targetLocales",
            "module": "locales/locales.js"
          }
        },
        {
          "kind": "js",
          "name": "allLocales",
          "declaration": {
            "name": "allLocales",
            "module": "locales/locales.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/sv.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{\n      's04dc5daea8ffcb1b': `Minst`,\n's07834954afa4b6d9': `Bidrag var borttaget`,\n's08b06007b5567108': `av`,\n's09e0eab6e02bc393': `Detta kommer att notifiera alla event deltagare`,\n's0d9e6884f8c4ba1a': `Behov`,\n's10aa05aa50d278b9': `Kräver administratörsgodkänning`,\n's10f50336534b13d7': `Inget min eller max`,\n's1244485ebc6b7d0a': `Minst och max`,\n's1d5bb8155f842a8d': `Tillfredställande`,\n's258f7773578f509b': `Redigera tillfredställande`,\n's2873489db50fee52': `Redigera händelseförslaget`,\n's28c37787e4765e58': `Fel vid skapandet av händelseförslag`,\n's2a71fae095e55879': `Det finns inga behov än.`,\n's2b9e39425bfcc804': `Max. möjliga`,\n's2bcc52b8378d6fd3': `Ta bort bidrag`,\n's2ceb11be2290bb1b': `Ta bort`,\n's2d49e7bc149b45f6': `Detta händelseförslaget har inga behovskrav`,\n's30c6728e592f4560': `Lägg till behov`,\n's3139c52a1117c905': `Sammansättning`,\n's33f85f24c0f5f008': `Spara`,\n's39f1f603c775a5b3': `Det finns inga tillfredställda behov.`,\n's3ccb73a74da91bf0': `Det sökta åtagandet finns inte`,\n's3e07827b85a6779a': `Bidra`,\n's40326a98f486d818': `Fel vid skapade av åtagandet`,\n's43eb64ba7056a741': `Den efterfrågade sammansättningen finns inte`,\n's49b4a5aecfdd8e35': `Max`,\n's524827c85a293dab': `Skapa sammansättning`,\n's5259c79873512bfc': `Fel vid hämtning av sammansättningen`,\n's5cdaaf1e8ed09fa1': `Fel vid hämtning av händelseförslaget`,\n's5f8492d41fc62041': `Åtagen att bidra`,\n's62a1100d991c6f2c': `Fel vid hämtning av tillfredställandet`,\n's63d894b1ddb06289': `Beskrivning`,\n's64dbbddf00d4c5ee': `Borttagna åtaganden`,\n's661045907dd942bc': `Åtag`,\n's695afc099cb2281c': `Min. behövda`,\n's6a952825a82ea974': `Detta behov tillfredställdes utan bidrag.`,\n's6d52cebcaa70b474': `Åtag bidragande`,\n's75f8021355029843': `Behöver beskrivning*`,\n's7e7b17262f41a198': `Fel vid hämtning av åtagande för detta händelseförslaget`,\n's8217b4cf2a9d5a97': `Ytterligare bidrag`,\n's906fe9255792554f': `Det finns ingan borttagna åtagande.`,\n's950600ee56db1843': `Ingen kommentar`,\n's983762ecac7f91d6': `Fel vid hämtning av `,\n's993dbfafb7511653': `Fel vid godkännande av åtagande`,\n's9dc338f31cc6c22c': `Det efterfrågade händelseförslaget finns inte`,\n'sa38fc58e91a0562d': `Fel vid skapandet av sammansättningen`,\n'sa7f40d9c3baa9830': `Det finns inga otillfredställda behov.`,\n'sabf9ff4d7b13d288': `Fel vid hämtning av sammanstättningarna`,\n'sabfa03dfc4fa6bda': `Det finns inga ytterligare bidrag.`,\n'saf84ec86139d349e': `Kommentar`,\n'saf9aab12d5299951': `Inga sammansättningar hittade för detta tillfredställande`,\n'sb1a3927bb18ccaf2': `Är du säker? Det finns inga åtagande för att bidra till detta behov än.`,\n'sb4ee10dd8a1622bc': `Ingen har bidragit till detta behov än.`,\n'sb65d8265eefc5783': `Endast en.`,\n'sb75af2a639e7fa01': `Fel vid hämtning av förslagsutvecklingen`,\n'sb97c2f40b5f2dd89': `Du har inga bidrag.`,\n'sba6d2aebd8696a70': `Tillfredställs av`,\n'sba98a7152d80b949': `Mängd`,\n'sce13ce26519c5565': `Fel vid skapande av tillfredställande`,\n'sd63b87e98ed1536f': `Det finns inga bidrag än.`,\n'sd9c91e17e3d7bcbd': `Fel vid hämtning av åtagande`,\n'se7229fcfe421ebe1': `Max möjliga bidrag nådda`,\n'se87af0982795d20a': `Fel vid hämtninga av åtagandena`,\n'sef2cd24ab375df7e': `Välj vilket åtagande som tillfredställer detta behov.`,\n'sf44cc868276931a1': `Den efterfrågade händelseförslaget hittades inte.`,\n'sf587cc61d3dfb90e': `Tillfredställ behov`,\n'sf5fd459d08e41134': `Inga sammansättningar hittades för detta händelseförslaget`,\n'sf6178cb3480a86ce': `Inga händelseförslag hittade för denna händelse`,\n'sf67e6e365e1dd961': `Åtagen att bidra`,\n'sfdebb1ce66502f94': `Bidrag`,\n'sfff952497e3fb6d1': `Det efterfrågade uppfyllandet finns inte`,\n    }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/sv.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/assemble-client.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembleClient",
          "members": [
            {
              "kind": "method",
              "name": "createCallToAction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<CallToAction>>"
                }
              },
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "CallToAction"
                  }
                }
              ],
              "description": "Call To Action"
            },
            {
              "kind": "method",
              "name": "getLatestCallToAction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<CallToAction> | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deleteCallToAction",
              "return": {
                "type": {
                  "text": "Promise<ActionHash>"
                }
              },
              "parameters": [
                {
                  "name": "originalCallToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateCallToAction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<CallToAction>>"
                }
              },
              "parameters": [
                {
                  "name": "previousCallToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "name": "updatedCallToAction",
                  "type": {
                    "text": "CallToAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCallToActionsForCallToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<Link>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createCommitment",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Commitment>>"
                }
              },
              "parameters": [
                {
                  "name": "commitment",
                  "type": {
                    "text": "Commitment"
                  }
                }
              ],
              "description": "Commitment"
            },
            {
              "kind": "method",
              "name": "getCommitment",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Commitment> | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "commitmentHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCommitmentsForCallToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<Link>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Satisfaction>>"
                }
              },
              "parameters": [
                {
                  "name": "satisfaction",
                  "type": {
                    "text": "Satisfaction"
                  }
                }
              ],
              "description": "Satisfaction"
            },
            {
              "kind": "method",
              "name": "getLatestSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Satisfaction>>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Satisfaction>>"
                }
              },
              "parameters": [
                {
                  "name": "previousSatisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "name": "updatedSatisfaction",
                  "type": {
                    "text": "Satisfaction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSatisfactionsForCallToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<Link>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSatisfactionsForCommitment",
              "return": {
                "type": {
                  "text": "Promise<Array<Link>>"
                }
              },
              "parameters": [
                {
                  "name": "commitmentHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deleteSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<ActionHash>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSatisfactionDeletes",
              "return": {
                "type": {
                  "text": "Promise<Array<SignedActionHashed<Delete>>>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createAssembly",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Assembly>>"
                }
              },
              "parameters": [
                {
                  "name": "assembly",
                  "type": {
                    "text": "Assembly"
                  }
                }
              ],
              "description": "Assembly"
            },
            {
              "kind": "method",
              "name": "getAssembly",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Assembly> | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "assemblyHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAssembliesForCallToAction",
              "return": {
                "type": {
                  "text": "Promise<Array<Link>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAssembliesForSatisfaction",
              "return": {
                "type": {
                  "text": "Promise<Array<Link>>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "ZomeClient",
            "package": "@holochain-open-dev/utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembleClient",
          "declaration": {
            "name": "AssembleClient",
            "module": "src/assemble-client.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/assemble-store.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembleStore",
          "members": [
            {
              "kind": "field",
              "name": "callToActions",
              "default": "new LazyHoloHashMap((callToActionHash: ActionHash) => {\n    const commitments = liveLinksStore(\n      this.client,\n      callToActionHash,\n      () => this.client.getCommitmentsForCallToAction(callToActionHash),\n      'CallToActionToCommitments'\n    );\n    const withCancellations = pipe(commitments, commitmentsLinks =>\n      mapAndJoin(\n        slice(\n          this.commitments,\n          commitmentsLinks.map(l => l.target)\n        ),\n        s => s.isCancelled\n      )\n    );\n    const satisfactionsHashes = liveLinksStore(\n      this.client,\n      callToActionHash,\n      () => this.client.getSatisfactionsForCallToAction(callToActionHash),\n      'CallToActionToSatisfactions'\n    );\n    const latestVersion = latestVersionOfEntryStore(this.client, () =>\n      this.client.getLatestCallToAction(callToActionHash)\n    );\n    const needs = joinAsync([\n      latestVersion,\n      pipe(satisfactionsHashes, links =>\n        mapAndJoin(\n          slice(\n            this.satisfactions,\n            links.map(l => l.target)\n          ),\n          s => s.latestVersion\n        )\n      ),\n    ]);\n    return {\n      latestVersion,\n      needs: {\n        satisfied: pipe(needs, ([callToAction, satisfactions]) =>\n          callToAction.entry.needs\n            .map((n, i) => [n, i] as [Need, number])\n            .filter(\n              ([n, i]) =>\n                n.min_necessary === 0 ||\n                !!Array.from(satisfactions.values()).find(\n                  s => s.entry.need_index === i\n                )\n            )\n        ),\n        unsatisfied: pipe(needs, ([callToAction, satisfactions]) =>\n          callToAction.entry.needs\n            .map((n, i) => [n, i] as [Need, number])\n            .filter(\n              ([n, i]) =>\n                n.min_necessary > 0 &&\n                !Array.from(satisfactions.values()).find(\n                  s => s.entry.need_index === i\n                )\n            )\n        ),\n      },\n      commitments: {\n        cancelled: pipe(\n          withCancellations,\n          commitmentsToIsCancelledMap =>\n            Array.from(commitmentsToIsCancelledMap.entries())\n              .filter(([_commitmentHash, isCancelled]) => isCancelled)\n              .map(([c]) => c),\n          hashes => slice(this.commitments, hashes)\n        ),\n        uncancelled: pipe(\n          withCancellations,\n          commitmentsToIsCancelledMap =>\n            Array.from(commitmentsToIsCancelledMap.entries())\n              .filter(([_commitmentHash, isCancelled]) => !isCancelled)\n              .map(([c]) => c),\n          hashes => slice(this.commitments, hashes)\n        ),\n      },\n      satisfactions: pipe(satisfactionsHashes, links =>\n        slice(\n          this.satisfactions,\n          links.map(l => l.target)\n        )\n      ),\n      assemblies: pipe(\n        liveLinksStore(\n          this.client,\n          callToActionHash,\n          () => this.client.getAssembliesForCallToAction(callToActionHash),\n          'CallToActionToAssemblies'\n        ),\n        links =>\n          slice(\n            this.assemblies,\n            links.map(l => l.target)\n          )\n      ),\n    };\n  })",
              "description": "Call To Action"
            },
            {
              "kind": "field",
              "name": "callToActionsForCallToAction",
              "default": "new LazyHoloHashMap(\n    (callToActionHash: ActionHash) =>\n      liveLinksStore(\n        this.client,\n        callToActionHash,\n        () => this.client.getCallToActionsForCallToAction(callToActionHash),\n        'CallToActionToCallToActions'\n      )\n  )"
            },
            {
              "kind": "field",
              "name": "commitments",
              "default": "new LazyHoloHashMap((commitmentHash: ActionHash) => ({\n    entry: immutableEntryStore(() => this.client.getCommitment(commitmentHash)),\n    cancellations: this.cancellationsStore.cancellationsFor.get(commitmentHash),\n    isCancelled: pipe(\n      this.cancellationsStore.cancellationsFor.get(commitmentHash).live,\n      c => c.size > 0\n    ),\n    satisfactions: pipe(\n      liveLinksStore(\n        this.client,\n        commitmentHash,\n        () => this.client.getSatisfactionsForCommitment(commitmentHash),\n        'CommitmentToSatisfactions'\n      ),\n      links =>\n        slice(\n          this.satisfactions,\n          links.map(l => l.target)\n        )\n    ),\n  }))",
              "description": "Commitment"
            },
            {
              "kind": "field",
              "name": "satisfactions",
              "default": "new LazyHoloHashMap((satisfactionHash: ActionHash) => ({\n    latestVersion: latestVersionOfEntryStore(this.client, () =>\n      this.client.getLatestSatisfaction(satisfactionHash)\n    ),\n    deletes: deletesForEntryStore(this.client, satisfactionHash, () =>\n      this.client.getSatisfactionDeletes(satisfactionHash)\n    ),\n    assemblies: pipe(\n      liveLinksStore(\n        this.client,\n        satisfactionHash,\n        () => this.client.getAssembliesForSatisfaction(satisfactionHash),\n        'SatisfactionToAssemblies'\n      ),\n      links =>\n        slice(\n          this.assemblies,\n          links.map(l => l.target)\n        )\n    ),\n  }))",
              "description": "Satisfaction"
            },
            {
              "kind": "field",
              "name": "assemblies",
              "default": "new LazyHoloHashMap((assemblyHash: ActionHash) =>\n    immutableEntryStore(() => this.client.getAssembly(assemblyHash))\n  )",
              "description": "Assembly"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembleStore",
          "declaration": {
            "name": "AssembleStore",
            "module": "src/assemble-store.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "assembleStoreContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "assembleStoreContext",
          "declaration": {
            "name": "assembleStoreContext",
            "module": "src/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./assemble-store.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./assemble-client.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mocks.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembleZomeMock",
          "members": [
            {
              "kind": "field",
              "name": "callToAction",
              "default": "new RecordBag<CallToAction>()",
              "description": "Call To Action"
            },
            {
              "kind": "field",
              "name": "callToActionsForCallToAction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "method",
              "name": "create_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "CallToAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Record | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "delete_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<ActionHash>"
                }
              },
              "parameters": [
                {
                  "name": "original_call_to_action_hash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "update_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "{\n    previous_call_to_action_hash: ActionHash;\n    updated_call_to_action: CallToAction;\n  }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_call_to_actions_for_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<ActionHash>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "commitment",
              "default": "new RecordBag<Commitment>()",
              "description": "Promise"
            },
            {
              "kind": "field",
              "name": "commitmentsForCallToAction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "method",
              "name": "create_commitment",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "commitment",
                  "type": {
                    "text": "Commitment"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_commitment",
              "return": {
                "type": {
                  "text": "Promise<Record | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "commitmentHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_commitments_for_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<ActionHash>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "satisfaction",
              "default": "new RecordBag<Satisfaction>()",
              "description": "Satisfaction"
            },
            {
              "kind": "field",
              "name": "satisfactionsForCallToAction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "field",
              "name": "satisfactionsForCommitment",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "method",
              "name": "create_satisfaction",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "satisfaction",
                  "type": {
                    "text": "Satisfaction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_satisfaction",
              "return": {
                "type": {
                  "text": "Promise<Record | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "update_satisfaction",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "{\n    previous_satisfaction_hash: ActionHash;\n    updated_satisfaction: Satisfaction;\n  }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_satisfactions_for_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<ActionHash>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_satisfactions_for_commitment",
              "return": {
                "type": {
                  "text": "Promise<Array<ActionHash>>"
                }
              },
              "parameters": [
                {
                  "name": "commitmentHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "assembly",
              "default": "new RecordBag<Assembly>()",
              "description": "Assembly"
            },
            {
              "kind": "field",
              "name": "assembliesForCallToAction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "field",
              "name": "assembliesForSatisfaction",
              "default": "new HoloHashMap<ActionHash, ActionHash[]>()"
            },
            {
              "kind": "method",
              "name": "create_assembly",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "assembly",
                  "type": {
                    "text": "Assembly"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_assembly",
              "return": {
                "type": {
                  "text": "Promise<Record | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "assemblyHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_assemblies_for_call_to_action",
              "return": {
                "type": {
                  "text": "Promise<Array<ActionHash>>"
                }
              },
              "parameters": [
                {
                  "name": "callToActionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_assemblies_for_satisfaction",
              "return": {
                "type": {
                  "text": "Promise<Array<ActionHash>>"
                }
              },
              "parameters": [
                {
                  "name": "satisfactionHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "ZomeMock",
            "package": "@holochain-open-dev/utils"
          }
        },
        {
          "kind": "function",
          "name": "sampleCallToAction",
          "return": {
            "type": {
              "text": "Promise<CallToAction>"
            }
          },
          "parameters": [
            {
              "name": "assembleClient",
              "type": {
                "text": "AssembleClient"
              }
            },
            {
              "name": "partialCallToAction",
              "default": "{}",
              "type": {
                "text": "Partial<CallToAction>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sampleCommitment",
          "return": {
            "type": {
              "text": "Promise<Commitment>"
            }
          },
          "parameters": [
            {
              "name": "assembleClient",
              "type": {
                "text": "AssembleClient"
              }
            },
            {
              "name": "partialCommitment",
              "default": "{}",
              "type": {
                "text": "Partial<Commitment>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sampleSatisfaction",
          "return": {
            "type": {
              "text": "Promise<Satisfaction>"
            }
          },
          "parameters": [
            {
              "name": "assembleClient",
              "type": {
                "text": "AssembleClient"
              }
            },
            {
              "name": "partialSatisfaction",
              "default": "{}",
              "type": {
                "text": "Partial<Satisfaction>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sampleAssembly",
          "return": {
            "type": {
              "text": "Promise<Assembly>"
            }
          },
          "parameters": [
            {
              "name": "assembleClient",
              "type": {
                "text": "AssembleClient"
              }
            },
            {
              "name": "partialAssembly",
              "default": "{}",
              "type": {
                "text": "Partial<Assembly>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembleZomeMock",
          "declaration": {
            "name": "AssembleZomeMock",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleCallToAction",
          "declaration": {
            "name": "sampleCallToAction",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleCommitment",
          "declaration": {
            "name": "sampleCommitment",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleSatisfaction",
          "declaration": {
            "name": "sampleSatisfaction",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleAssembly",
          "declaration": {
            "name": "sampleAssembly",
            "module": "src/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assemble-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembleContext",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "AssembleStore"
              },
              "attribute": "store"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "AssembleStore"
              },
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assemble-context",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembleContext",
          "declaration": {
            "name": "AssembleContext",
            "module": "src/elements/assemble-context.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assemble-context",
          "declaration": {
            "name": "AssembleContext",
            "module": "src/elements/assemble-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assemblies-for-call-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembliesForCallToAction",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assemblies-for-call-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembliesForCallToAction",
          "declaration": {
            "name": "AssembliesForCallToAction",
            "module": "src/elements/assemblies-for-call-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assemblies-for-call-to-action",
          "declaration": {
            "name": "AssembliesForCallToAction",
            "module": "src/elements/assemblies-for-call-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assemblies-for-satisfaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssembliesForSatisfaction",
          "members": [
            {
              "kind": "field",
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "satisfactionHash"
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "satisfactionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assemblies-for-satisfaction",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssembliesForSatisfaction",
          "declaration": {
            "name": "AssembliesForSatisfaction",
            "module": "src/elements/assemblies-for-satisfaction.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assemblies-for-satisfaction",
          "declaration": {
            "name": "AssembliesForSatisfaction",
            "module": "src/elements/assemblies-for-satisfaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assembly-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssemblyDetail",
          "members": [
            {
              "kind": "field",
              "name": "assemblyHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "assemblyHash"
            },
            {
              "kind": "method",
              "name": "renderDetail",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Assembly>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "detail will contain { assemblyHash }",
              "name": "assembly-deleted:"
            }
          ],
          "attributes": [
            {
              "name": "assemblyHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "assemblyHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assembly-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssemblyDetail",
          "declaration": {
            "name": "AssemblyDetail",
            "module": "src/elements/assembly-detail.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assembly-detail",
          "declaration": {
            "name": "AssemblyDetail",
            "module": "src/elements/assembly-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/assembly-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AssemblySummary",
          "members": [
            {
              "kind": "field",
              "name": "assemblyHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "assemblyHash"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Assembly>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "assembly-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { assemblyHash }",
              "name": "assembly-selected:"
            }
          ],
          "attributes": [
            {
              "name": "assemblyHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "assemblyHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "assembly-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssemblySummary",
          "declaration": {
            "name": "AssemblySummary",
            "module": "src/elements/assembly-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "assembly-summary",
          "declaration": {
            "name": "AssemblySummary",
            "module": "src/elements/assembly-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-need-form.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionNeedForm",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'need'",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "Need | undefined"
              },
              "description": "The default value of the field if this element is used inside a form",
              "attribute": "defaultValue"
            },
            {
              "kind": "field",
              "name": "hideRequiresAdminApproval",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the requires admin approval switch, defaulting it to false",
              "attribute": "hide-requires-admin-approval"
            },
            {
              "kind": "field",
              "name": "disableMinNecessary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the minimum necessary fields",
              "attribute": "disable-min-necessary"
            },
            {
              "kind": "field",
              "name": "requiresAdminApprovalLabel",
              "attribute": "requires-admin-approval-label"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is disabled if this element is used inside a form"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "reset"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'need'",
              "fieldName": "name"
            },
            {
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "description"
            },
            {
              "name": "defaultValue",
              "type": {
                "text": "Need | undefined"
              },
              "description": "The default value of the field if this element is used inside a form",
              "fieldName": "defaultValue"
            },
            {
              "name": "hide-requires-admin-approval",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the requires admin approval switch, defaulting it to false",
              "fieldName": "hideRequiresAdminApproval"
            },
            {
              "name": "disable-min-necessary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the minimum necessary fields",
              "fieldName": "disableMinNecessary"
            },
            {
              "name": "requires-admin-approval-label",
              "fieldName": "requiresAdminApprovalLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-needs-form",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionNeedForm",
          "declaration": {
            "name": "CallToActionNeedForm",
            "module": "src/elements/call-to-action-need-form.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-need-form",
          "declaration": {
            "name": "CallToActionNeedForm",
            "module": "src/elements/call-to-action-need-form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-need-progress.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionNeedProgress",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "needIndex",
              "type": {
                "text": "number"
              },
              "attribute": "needIndex"
            },
            {
              "kind": "method",
              "name": "showBar",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNeedProgress",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                },
                {
                  "name": "satisfactions",
                  "type": {
                    "text": "Array<EntryRecord<Satisfaction>>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "needIndex",
              "type": {
                "text": "number"
              },
              "fieldName": "needIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-need-progress",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionNeedProgress",
          "declaration": {
            "name": "CallToActionNeedProgress",
            "module": "src/elements/call-to-action-need-progress.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-need-progress",
          "declaration": {
            "name": "CallToActionNeedProgress",
            "module": "src/elements/call-to-action-need-progress.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-needs-form.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionNeedsForm",
          "members": [
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "Array<Need>"
              },
              "default": "[\n    {\n      description: '',\n      min_necessary: 0,\n      max_possible: undefined,\n      requires_admin_approval: false,\n    },\n  ]",
              "description": "The default value of the field if this element is used inside a form",
              "attribute": "defaultValue"
            },
            {
              "kind": "field",
              "name": "allowEmpty",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "allow-empty"
            },
            {
              "kind": "field",
              "name": "hideRequiresAdminApproval",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hideRequiresAdminApproval"
            },
            {
              "kind": "field",
              "name": "requiresAdminApprovalLabel",
              "attribute": "requires-admin-approval-label"
            },
            {
              "kind": "field",
              "name": "disableMinNecessary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the minimum necessary fields",
              "attribute": "disable-min-necessary"
            },
            {
              "kind": "method",
              "name": "needForms",
              "return": {
                "type": {
                  "text": "CallToActionNeedForm[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "method",
              "name": "renderNeedForm",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "defaultValue",
              "type": {
                "text": "Array<Need>"
              },
              "default": "[\n    {\n      description: '',\n      min_necessary: 0,\n      max_possible: undefined,\n      requires_admin_approval: false,\n    },\n  ]",
              "description": "The default value of the field if this element is used inside a form",
              "fieldName": "defaultValue"
            },
            {
              "name": "allow-empty",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "allowEmpty"
            },
            {
              "name": "hideRequiresAdminApproval",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hideRequiresAdminApproval"
            },
            {
              "name": "requires-admin-approval-label",
              "fieldName": "requiresAdminApprovalLabel"
            },
            {
              "name": "disable-min-necessary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the minimum necessary fields",
              "fieldName": "disableMinNecessary"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-needs-form",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionNeedsForm",
          "declaration": {
            "name": "CallToActionNeedsForm",
            "module": "src/elements/call-to-action-needs-form.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-needs-form",
          "declaration": {
            "name": "CallToActionNeedsForm",
            "module": "src/elements/call-to-action-needs-form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-progress.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionProgress",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-progress",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionProgress",
          "declaration": {
            "name": "CallToActionProgress",
            "module": "src/elements/call-to-action-progress.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-progress",
          "declaration": {
            "name": "CallToActionProgress",
            "module": "src/elements/call-to-action-progress.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-satisfied-needs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionSatisfiedNeeds",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "attribute": "hideNeeds"
            },
            {
              "kind": "method",
              "name": "renderContributeButton",
              "parameters": [
                {
                  "name": "needIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "disabledReason",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderSatisfiedNeeds",
              "parameters": [
                {
                  "name": "needs",
                  "type": {
                    "text": "Array<[Need, number]>"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                },
                {
                  "name": "satisfactions",
                  "type": {
                    "text": "Array<EntryRecord<Satisfaction>>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "fieldName": "hideNeeds"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-satisfied-needs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionSatisfiedNeeds",
          "declaration": {
            "name": "CallToActionSatisfiedNeeds",
            "module": "src/elements/call-to-action-satisfied-needs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-satisfied-needs",
          "declaration": {
            "name": "CallToActionSatisfiedNeeds",
            "module": "src/elements/call-to-action-satisfied-needs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionSummary",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCallToAction"
            }
          ],
          "events": [
            {
              "name": "call-to-action-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { callToActionHash }",
              "name": "call-to-action-selected:"
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionSummary",
          "declaration": {
            "name": "CallToActionSummary",
            "module": "src/elements/call-to-action-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-summary",
          "declaration": {
            "name": "CallToActionSummary",
            "module": "src/elements/call-to-action-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-unsatisfied-needs-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionUnsatisfiedNeedsSummary",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "method",
              "name": "renderUnsatisfiedNeedsSummary",
              "parameters": [
                {
                  "name": "needs",
                  "type": {
                    "text": "Array<[Need, number]>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-unsatisfied-needs-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionUnsatisfiedNeedsSummary",
          "declaration": {
            "name": "CallToActionUnsatisfiedNeedsSummary",
            "module": "src/elements/call-to-action-unsatisfied-needs-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-unsatisfied-needs-summary",
          "declaration": {
            "name": "CallToActionUnsatisfiedNeedsSummary",
            "module": "src/elements/call-to-action-unsatisfied-needs-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-action-unsatisfied-needs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionUnsatisfiedNeeds",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "attribute": "hideNeeds"
            },
            {
              "kind": "method",
              "name": "canICreateSatisfactions",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createAssembly",
              "parameters": [
                {
                  "name": "satisfactions_hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCommitmentsForNeed",
              "parameters": [
                {
                  "name": "needIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                },
                {
                  "name": "emptyPlaceholder",
                  "default": "msg('No one has contributed to this need yet.')"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderUnsatisfiedNeeds",
              "parameters": [
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                },
                {
                  "name": "needs",
                  "type": {
                    "text": "Array<[Need, number]>"
                  }
                },
                {
                  "name": "commitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                },
                {
                  "name": "cancelledCommitments",
                  "type": {
                    "text": "Array<EntryRecord<Commitment>>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "assembly-created",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "fieldName": "hideNeeds"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-action-unsatisfied-needs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionUnsatisfiedNeeds",
          "declaration": {
            "name": "CallToActionUnsatisfiedNeeds",
            "module": "src/elements/call-to-action-unsatisfied-needs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-action-unsatisfied-needs",
          "declaration": {
            "name": "CallToActionUnsatisfiedNeeds",
            "module": "src/elements/call-to-action-unsatisfied-needs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/call-to-actions-for-call-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CallToActionsForCallToAction",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "call-to-actions-for-call-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CallToActionsForCallToAction",
          "declaration": {
            "name": "CallToActionsForCallToAction",
            "module": "src/elements/call-to-actions-for-call-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "call-to-actions-for-call-to-action",
          "declaration": {
            "name": "CallToActionsForCallToAction",
            "module": "src/elements/call-to-actions-for-call-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/commitment-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CommitmentDetail",
          "members": [
            {
              "kind": "field",
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "commitmentHash"
            },
            {
              "kind": "field",
              "name": "hideAvatar",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hideAvatar"
            },
            {
              "kind": "field",
              "name": "showNeed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "showNeed"
            },
            {
              "kind": "method",
              "name": "renderDetail",
              "parameters": [
                {
                  "name": "commitment",
                  "type": {
                    "text": "EntryRecord<Commitment>"
                  }
                },
                {
                  "name": "callToAction",
                  "type": {
                    "text": "EntryRecord<CallToAction>"
                  }
                },
                {
                  "name": "cancellations",
                  "type": {
                    "text": "ActionHash[]"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "detail will contain { commitmentHash }",
              "name": "commitment-deleted:"
            }
          ],
          "attributes": [
            {
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "commitmentHash"
            },
            {
              "name": "hideAvatar",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hideAvatar"
            },
            {
              "name": "showNeed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showNeed"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "commitment-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CommitmentDetail",
          "declaration": {
            "name": "CommitmentDetail",
            "module": "src/elements/commitment-detail.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "commitment-detail",
          "declaration": {
            "name": "CommitmentDetail",
            "module": "src/elements/commitment-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/commitment-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CommitmentSummary",
          "members": [
            {
              "kind": "field",
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "commitmentHash"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Commitment>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCommitment"
            }
          ],
          "events": [
            {
              "name": "commitment-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { commitmentHash }",
              "name": "commitment-selected:"
            }
          ],
          "attributes": [
            {
              "name": "commitmentHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "commitmentHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "commitment-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CommitmentSummary",
          "declaration": {
            "name": "CommitmentSummary",
            "module": "src/elements/commitment-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "commitment-summary",
          "declaration": {
            "name": "CommitmentSummary",
            "module": "src/elements/commitment-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-assembly.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CreateAssembly",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "satisfactionsHashes",
              "type": {
                "text": "Array<ActionHash>"
              },
              "attribute": "satisfactionsHashes"
            },
            {
              "kind": "method",
              "name": "createAssembly",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "assembly-created",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { assemblyHash }",
              "name": "assembly-created:"
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "satisfactionsHashes",
              "type": {
                "text": "Array<ActionHash>"
              },
              "fieldName": "satisfactionsHashes"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-assembly",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateAssembly",
          "declaration": {
            "name": "CreateAssembly",
            "module": "src/elements/create-assembly.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "create-assembly",
          "declaration": {
            "name": "CreateAssembly",
            "module": "src/elements/create-assembly.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-commitment.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CreateCommitment",
          "members": [
            {
              "kind": "field",
              "name": "callToAction",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "attribute": "callToAction"
            },
            {
              "kind": "field",
              "name": "needIndex",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "needIndex"
            },
            {
              "kind": "method",
              "name": "show"
            },
            {
              "kind": "method",
              "name": "createCommitment",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "commitment-created",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { commitmentHash }",
              "name": "commitment-created:"
            }
          ],
          "attributes": [
            {
              "name": "callToAction",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "fieldName": "callToAction"
            },
            {
              "name": "needIndex",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "needIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-commitment",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateCommitment",
          "declaration": {
            "name": "CreateCommitment",
            "module": "src/elements/create-commitment.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "create-commitment",
          "declaration": {
            "name": "CreateCommitment",
            "module": "src/elements/create-commitment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-satisfaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CreateSatisfaction",
          "members": [
            {
              "kind": "field",
              "name": "callToAction",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "attribute": "callToAction"
            },
            {
              "kind": "field",
              "name": "needIndex",
              "type": {
                "text": "number"
              },
              "attribute": "needIndex"
            },
            {
              "kind": "field",
              "name": "commitments",
              "type": {
                "text": "Array<EntryRecord<Commitment>> | undefined"
              },
              "attribute": "commitments"
            },
            {
              "kind": "method",
              "name": "show"
            },
            {
              "kind": "method",
              "name": "createSatisfaction",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "satisfaction-created",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { satisfactionHash }",
              "name": "satisfaction-created:"
            }
          ],
          "attributes": [
            {
              "name": "callToAction",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "fieldName": "callToAction"
            },
            {
              "name": "needIndex",
              "type": {
                "text": "number"
              },
              "fieldName": "needIndex"
            },
            {
              "name": "commitments",
              "type": {
                "text": "Array<EntryRecord<Commitment>> | undefined"
              },
              "fieldName": "commitments"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-satisfaction",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateSatisfaction",
          "declaration": {
            "name": "CreateSatisfaction",
            "module": "src/elements/create-satisfaction.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "create-satisfaction",
          "declaration": {
            "name": "CreateSatisfaction",
            "module": "src/elements/create-satisfaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/edit-call-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EditCallToAction",
          "members": [
            {
              "kind": "field",
              "name": "currentRecord",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "attribute": "currentRecord"
            },
            {
              "kind": "method",
              "name": "updateCallToAction",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "call-to-action-updated",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "edit-canceled",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { previousCallToActionHash, updatedCallToActionHash }",
              "name": "call-to-action-updated:"
            }
          ],
          "attributes": [
            {
              "name": "currentRecord",
              "type": {
                "text": "EntryRecord<CallToAction>"
              },
              "fieldName": "currentRecord"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "edit-call-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditCallToAction",
          "declaration": {
            "name": "EditCallToAction",
            "module": "src/elements/edit-call-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "edit-call-to-action",
          "declaration": {
            "name": "EditCallToAction",
            "module": "src/elements/edit-call-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/edit-satisfaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EditSatisfaction",
          "members": [
            {
              "kind": "field",
              "name": "currentRecord",
              "type": {
                "text": "EntryRecord<Satisfaction>"
              },
              "attribute": "currentRecord"
            },
            {
              "kind": "method",
              "name": "updateSatisfaction",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "satisfaction-updated",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "edit-canceled",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { previousSatisfactionHash, updatedSatisfactionHash }",
              "name": "satisfaction-updated:"
            }
          ],
          "attributes": [
            {
              "name": "currentRecord",
              "type": {
                "text": "EntryRecord<Satisfaction>"
              },
              "fieldName": "currentRecord"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "edit-satisfaction",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditSatisfaction",
          "declaration": {
            "name": "EditSatisfaction",
            "module": "src/elements/edit-satisfaction.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "edit-satisfaction",
          "declaration": {
            "name": "EditSatisfaction",
            "module": "src/elements/edit-satisfaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/my-commitments-for-call-to-action.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyCommitmentsForCallToAction",
          "members": [
            {
              "kind": "field",
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "callToActionHash"
            },
            {
              "kind": "field",
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "attribute": "hideNeeds"
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "hashes",
                  "type": {
                    "text": "Array<ActionHash>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "callToActionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "callToActionHash"
            },
            {
              "name": "hideNeeds",
              "type": {
                "text": "Array<number>"
              },
              "default": "[]",
              "fieldName": "hideNeeds"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "my-commitments-for-call-to-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyCommitmentsForCallToAction",
          "declaration": {
            "name": "MyCommitmentsForCallToAction",
            "module": "src/elements/my-commitments-for-call-to-action.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "my-commitments-for-call-to-action",
          "declaration": {
            "name": "MyCommitmentsForCallToAction",
            "module": "src/elements/my-commitments-for-call-to-action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/satisfaction-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SatisfactionDetail",
          "members": [
            {
              "kind": "field",
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "satisfactionHash"
            },
            {
              "kind": "method",
              "name": "renderDetail",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Satisfaction>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "detail will contain { satisfactionHash }",
              "name": "satisfaction-deleted:"
            }
          ],
          "attributes": [
            {
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "satisfactionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "satisfaction-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SatisfactionDetail",
          "declaration": {
            "name": "SatisfactionDetail",
            "module": "src/elements/satisfaction-detail.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "satisfaction-detail",
          "declaration": {
            "name": "SatisfactionDetail",
            "module": "src/elements/satisfaction-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/satisfaction-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SatisfactionSummary",
          "members": [
            {
              "kind": "field",
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "attribute": "satisfactionHash"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "parameters": [
                {
                  "name": "entryRecord",
                  "type": {
                    "text": "EntryRecord<Satisfaction>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderSatisfaction"
            }
          ],
          "events": [
            {
              "name": "satisfaction-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "detail will contain { satisfactionHash }",
              "name": "satisfaction-selected:"
            }
          ],
          "attributes": [
            {
              "name": "satisfactionHash",
              "type": {
                "text": "ActionHash"
              },
              "fieldName": "satisfactionHash"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "satisfaction-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SatisfactionSummary",
          "declaration": {
            "name": "SatisfactionSummary",
            "module": "src/elements/satisfaction-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "satisfaction-summary",
          "declaration": {
            "name": "SatisfactionSummary",
            "module": "src/elements/satisfaction-summary.ts"
          }
        }
      ]
    }
  ]
}
